[{"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/reportWebVitals.js":"1","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/Header.js":"2","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/redux/reducer.js":"3","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/index.js":"4","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/redux/store.js":"5","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/App.js":"6","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/redux/actionTypes.js":"7","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/redux/actions.js":"8","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Containers/MainContainer.js":"9","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/UserProfile.js":"10","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Containers/ActivitiesContainer.js":"11","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Containers/JournalEntriesContainer.js":"12","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/Affirmations.js":"13","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/ActivityCard.js":"14","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/Welcome.js":"15","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/JournalEntryCard.js":"16","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/JournalEntryForm.js":"17","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/LogIn.js":"18","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/SignUp.js":"19","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/JournalUpdate.js":"20","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/MenuOverlay.js":"21"},{"size":362,"mtime":1610494671183,"results":"22","hashOfConfig":"23"},{"size":1518,"mtime":1611686713693,"results":"24","hashOfConfig":"23"},{"size":2634,"mtime":1612210903162,"results":"25","hashOfConfig":"23"},{"size":709,"mtime":1610640262609,"results":"26","hashOfConfig":"23"},{"size":233,"mtime":1610577608474,"results":"27","hashOfConfig":"23"},{"size":259,"mtime":1611262245788,"results":"28","hashOfConfig":"23"},{"size":537,"mtime":1611450821107,"results":"29","hashOfConfig":"23"},{"size":7722,"mtime":1611773584915,"results":"30","hashOfConfig":"23"},{"size":1212,"mtime":1611421121585,"results":"31","hashOfConfig":"23"},{"size":3603,"mtime":1611582040789,"results":"32","hashOfConfig":"23"},{"size":1164,"mtime":1611674766207,"results":"33","hashOfConfig":"23"},{"size":4599,"mtime":1612307067527,"results":"34","hashOfConfig":"23"},{"size":1278,"mtime":1610579150520,"results":"35","hashOfConfig":"23"},{"size":407,"mtime":1611695807471,"results":"36","hashOfConfig":"23"},{"size":561,"mtime":1611617209269,"results":"37","hashOfConfig":"23"},{"size":2322,"mtime":1612290938172,"results":"38","hashOfConfig":"23"},{"size":6133,"mtime":1611956511727,"results":"39","hashOfConfig":"23"},{"size":1691,"mtime":1611603788748,"results":"40","hashOfConfig":"23"},{"size":2596,"mtime":1611603782818,"results":"41","hashOfConfig":"23"},{"size":2431,"mtime":1611675437587,"results":"42","hashOfConfig":"23"},{"size":1155,"mtime":1611514537144,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k0egex",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/reportWebVitals.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/Header.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/redux/reducer.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/index.js",[],["90","91"],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/redux/store.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/App.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/redux/actionTypes.js",[],["92","93"],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/redux/actions.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Containers/MainContainer.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/UserProfile.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Containers/ActivitiesContainer.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Containers/JournalEntriesContainer.js",["94","95"],"import React from 'react'\nimport Affirmations from '../Components/Affirmations'\nimport JournalEntryCard from '../Components/JournalEntryCard'\nimport { connect } from 'react-redux'\nimport { getEntries, getAffirmation } from '../redux/actions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass JournalEntriesContainer extends React.Component {\n\n\n  state = {\n    dateSearch: \"\",\n    activitySearch: \"\"\n  }\n\n  componentDidMount() {\n    this.props.getAffirmation()\n    if (this.props.user) {\n      this.props.getJournalEntries(this.props.user.id)\n    }\n  }\n\n  renderJournalEntries() {\nif(this.state.activitySearch === \"\") {\n  return this.filterEntriesByDate().map(journalObj => < JournalEntryCard journal={journalObj} key={journalObj.id} />)\n\n} else if(this.state.dateSearch === \"\"){\n  return this.filterEntriesByActivity().map(journalObj => < JournalEntryCard journal={journalObj} key={journalObj.id} />)\n\n} else if(this.state.activitySearch !== \"\" && this.state.dateSearch !== \"\") {\n  alert(\"Oops you cannot search by both Date AND Activity. Please try again.\")\n  this.setState({dateSearch: \"\", activitySearch: \"\"})\n  return this.props.journalEntries.map(journalObj => < JournalEntryCard journal={journalObj} key={journalObj.id} />)\n\n}\n  }\n\n\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n\n  }\n\n  changeDate(str) {\n    let updatedDate = new Date(str.split('-'))\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n    return updatedDate.toLocaleDateString('en-US', options)\n  }\n\n\n\n  filterEntriesByDate = () => {\n    return this.props.journalEntries.filter(entry => this.changeDate(entry.date).toLowerCase().includes(this.state.dateSearch.toLowerCase()))\n\n  }\n\n  // still working thru issues to get a functioning filter by activity - so far I can only filter by activity.name but not activity_name\n  filterEntriesByActivity = () => {\n    let filteredArray = []\n    let finalArray = []\n\n     this.props.journalEntries.map(journalEntryObj => {\n      if (journalEntryObj.user_activity.activity) {\n        // first iterating thru for activity.name from activity db\n        filteredArray.push(journalEntryObj)\n        // console.log(filteredArray)\n        finalArray = filteredArray.filter(entry => entry.user_activity.activity.name.toLowerCase().includes(this.state.activitySearch.toLowerCase()))\n        if (finalArray.length === 0 && journalEntryObj.user_activity.activity_name) {\n          // then iterating thru for activity_name from activity db\n          filteredArray.push(journalEntryObj)\n         \n          finalArray = filteredArray.filter(entry => entry.user_activity.activity_name.toLowerCase().includes(this.state.activitySearch.toLowerCase()))\n          console.log(\"activity_name\", this.state.activitySearch)\n        }\n      }\n    })\n    return finalArray\n  }\n\n\n\n\n\n  render() {\n    console.log(this.filterEntriesByActivity())\n    return (\n      <>\n\n        {this.props.user ?\n\n          <>\n\n            {this.props.user.id && this.props.journalEntries.length > 0 ?\n              <div className=\"journal-entries\">\n                <Affirmations />\n                <h1>My Journal Entries:</h1>\n                <div>\n                  <form className=\"form filter\">\n                    <label>Filter By Date:</label>\n                    <input type=\"text\"\n                      name=\"dateSearch\"\n                      value={this.state.dateSearch}\n                      onChange={this.onChange}\n                    ></input>\n\n                    <label>Filter By Activity:</label>\n                    <input type=\"text\"\n                      name=\"activitySearch\"\n                      value={this.state.activitySearch}\n                      onChange={this.onChange}\n                    ></input>\n                  </form>\n                </div>\n                <div className=\"container\" >\n                  {this.renderJournalEntries()}\n                </div>\n              </div> :\n              <>\n                <div className=\"journal-entries\">\n                  <Affirmations />\n                  <h1>You do not have any journal entries (yet)....</h1>\n                </div>\n              </>\n\n            }\n          </>\n\n          :\n\n          <Redirect to=\"/welcome\" />\n\n        }\n\n      </>\n\n\n    )\n\n  }\n}\n\nconst msp = (state) => {\n  return {\n    journalEntries: state.journalEntries\n  }\n}\n\nconst mdp = (dispatch) => {\n  return {\n    getJournalEntries: (userId) => (dispatch(getEntries(userId))),\n    getAffirmation: () => dispatch(getAffirmation())\n  }\n}\n\nexport default connect(msp, mdp)(JournalEntriesContainer)","/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/Affirmations.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/ActivityCard.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/Welcome.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/JournalEntryCard.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/JournalEntryForm.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/LogIn.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/SignUp.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/JournalUpdate.js",[],"/Users/michelletalbert/Development/code/Mod5/self-care-app-frontend/src/Components/MenuOverlay.js",[],["96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":28,"column":33,"nodeType":"106","messageId":"107","endLine":28,"endColumn":35},{"ruleId":"108","severity":1,"message":"109","line":63,"column":52,"nodeType":"110","messageId":"111","endLine":63,"endColumn":54},{"ruleId":"98","replacedBy":"112"},{"ruleId":"100","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],["114"],["115"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["114"],["115"],"no-global-assign","no-unsafe-negation"]